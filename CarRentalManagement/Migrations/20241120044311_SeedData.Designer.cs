// <auto-generated />
using System;
using CarRentalManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRentalManagement.Migrations
{
    [DbContext(typeof(CarRentalManagementContext))]
    [Migration("20241120044311_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRentalManagement.Domain.Booking", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Colour", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Colour");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8087),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8108),
                            Name = "Black",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8111),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8112),
                            Name = "Blue",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DrivingLicense")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Make", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Make");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8535),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8537),
                            Name = "BMW",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8539),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8540),
                            Name = "Toyota",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Model", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Model");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8724),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8726),
                            Name = "I4",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8729),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8730),
                            Name = "X5",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            ID = 3,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8732),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8732),
                            Name = "Prius",
                            UpdatedBy = "System"
                        },
                        new
                        {
                            ID = 4,
                            CreatedBy = "System",
                            DateCreated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8734),
                            DateUpdated = new DateTime(2024, 11, 20, 12, 43, 10, 526, DateTimeKind.Local).AddTicks(8735),
                            Name = "C-HR",
                            UpdatedBy = "System"
                        });
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ColourId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LicensePlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Booking", b =>
                {
                    b.HasOne("CarRentalManagement.Domain.Customer", null)
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CarRentalManagement.Domain.Customer", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
